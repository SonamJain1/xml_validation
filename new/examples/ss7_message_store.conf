SIG_FIREWALL_MAXSESSIONAGE = 10secs
SIG_FIREWALL_STATS_INTERVAL = 15secs
EWOK_DEST_TYPE = 49

# These two properties are used to overwrite the
# desintation IP and/or M3UA DPC in the PCAP
# files generated for blocked TC-BEGINS.
# TenantIPAddr = Tenant1 : 1.2.3.4
# TenantM3UAPointCode = Tenant1 : 100
# If the dashed notation is used the variant must be
# explicitly specified as it cannot be deduced during
# plugin configuration.
# /14 => ITU, /24 => ANSI
# TenantM3UAPointCode = Tenant1 : 1-1-1/14

####################
# Hazelcast
####################
#  FIXME - Hazelcast connection details.
HazelcastConnection = app1:5701
HazelcastConnection = app2:5701
HazelcastConnection = app3:5701

HazelcastUseAuth = true
HazelcastUsername = engine
HazelcastPassword = engine

# Defaults to /opt/engine/stats/pmon/
# SigFirewallStatsDirectory = /opt/engine/stats/pmon/
# Defaults to true
# SigFirewallStatsEnabled = true
# Defaults to 10
# SigFirewallStatsMaxTenants = 10
# Defaults to 1000
# SigFirewallStatsMaxOperators = 1000

# The following "thread pools" must have sizes
# in the range [1-100].
#
# Use top -p <pmon_pid> -H
# pstack <pmon_pid> as root
# A continuously growing TcapEventQueue length stat in the pmon.log file suggests more TCAP threads are necessary.
# A continuously growning EwokTxQueue length stat in the pmon.log file suggests more EWOK Tx threads are necessary.
#
# With 50K TPS (SCCP UDTs / sec) with 1/3 BEGINs, 1/3 CONTINUEs and 1/3 ENDs
# resulting in 17K TPS EWOK to the application the following has proved sufficient on a VM
# with 16 cores with each core running @ 2.80GHz
#
# NumPcapThreads = 3
# NumTcapThreads = 6
# NumEwokTxThreads = 6
# 
NumPcapThreads = 1
NumTcapThreads = 1
NumEwokTxThreads = 1

# These two options allow M2UA traffic
# to be ignored if the OPC and DPC in the
# MTP3 above the M2UA don't match the configured
# white lists. Values can be specified in decimal
# or dashed notation but if dashed is used the
# /14 or /24 suffix must be specified to indicate
# ITU or ANSI.
#
# If no whitelists are specified all traffic is handled.
# The OPC whitelist can be specified without the DPC whitelist
# but, if the DPC whitelist is specified, the OPC whitelist
# must be specified.
#
# M2uaMtp3OPCWhitelist = 100
# M2uaMtp3DPCWhitelist = 200

# Enable this if we wish to present TC-BEGINs where the SCCP cg and SCCP cd
# map to the same operator to the service.
# CheckIntraTenantTraffic = false

# LD HA Groups
# We HA related information over EWOK.
# 
# Two things are shared:
#
# HAGroupName - the name of the group
#               all members of the same
#               group negotiate to find
#               a single active member.
# HAGroupScore - a value indicating how
#                much service a given
#                member of the group can
#                provide.  The member
#                with the highest score
#                will be the active member.
#                Where there is a tie.
#                Then the member with
#                the highest score and
#                lowest EWOK NodeId
#                will be the active member.
#
#                Currently the HAGroupScore
#                calculation is hard coded
#                and is calculated as follows:
#
#                (trafficPresent * 100,000) +
#         (numMonitorNicsWithLinks * 1,000) +
#                (isPreferredNode *      1)
#
# eg.
#
# a NIF with two monitored NICs that's seeing traffic
# will have a score of 102,000
#
# a NIF with a single monitored NIC that is configured
# as the preferred node and is seeing traffic will
# have a score of 101,001
#
# The HA information can be viewed from within eccm.

# The group name defaults to an empty string.
# An empty string group name disables this
# HA functionality.
#
# LdHAGroupName = TheHAGroup

# The HA information is shared by every loaddirector
# that this client is connected to.
# If we receive an HA report from one LD then
# we expect an HA report from the remaining LDs
# The timeout governs how long we are prepared to
# wait for those remaining HA reports.
# 3 seconds is the default.
#
# LdHAGroupFailoverTimeout = 3secs

# Set this option to true to bump the HAScore
# of this node up by one so that it will always
# be active if all other HA factors are equal.
#
# LdHAGroupPreferredNode = false
